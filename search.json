[{"path":"https://ashbaldry.github.io/appler/articles/introduction.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to {appler}","text":"{appler} package wrapper around Apple’s App Store Search API. allows user pull information artists, applications, anything else available iTunes Apple App Store. functions included allow pulling information included search API application reviews split ratings.","code":""},{"path":"https://ashbaldry.github.io/appler/articles/introduction.html","id":"apple-store-search","dir":"Articles","previous_headings":"","what":"Apple Store Search","title":"Introduction to {appler}","text":"first thing find ID entity analysing. search_apple function use Apple’s API return items related search terms entered. default pulls tracks audiobooks, however entity parameter can specify want search artists applications. Applications slightly different, instead artistId, trackId used store unique ID. searching software, lot information returned, application metadata (size, version, release notes) average rating. Use str(github_app) take look everything included.","code":"# Artist ID can be obtained from the artistId column taylor_swift_songs <- search_apple(\"Taylor Swift\")  taylor_swift <- search_apple(\"Taylor Swift\", media = \"music\", entity = \"musicArtist\") str(taylor_swift) #> 'data.frame':    1 obs. of  8 variables: #>  $ wrapperType     : chr \"artist\" #>  $ artistType      : chr \"Artist\" #>  $ artistName      : chr \"Taylor Swift\" #>  $ artistLinkUrl   : chr \"https://music.apple.com/us/artist/taylor-swift/159260351?uo=4\" #>  $ artistId        : int 159260351 #>  $ amgArtistId     : int 816977 #>  $ primaryGenreName: chr \"Pop\" #>  $ primaryGenreId  : int 14  taylor_swift_id <- taylor_swift$artistId github_tracks <- search_apple(\"GitHub\")  github_app <- search_apple(\"GitHub\", media = \"software\", entity = \"software\") # Over 50 apps are returned, however the top is the official GitHub app github_app_id <- github_app$trackId[1] cat(github_app_id) #> 1477376905"},{"path":"https://ashbaldry.github.io/appler/articles/introduction.html","id":"manual-search","dir":"Articles","previous_headings":"Apple Store Search","what":"Manual Search","title":"Introduction to {appler}","text":"Alternatively ID can found URL. artists tracks can found last part URL. example, find Taylor Swift ID 159260351 (https://music.apple.com/us/artist/taylor-swift/159260351), latest album Midnights 1650841512 (https://music.apple.com/us/album/midnights-3am-edition/1650841512). applications almost , however prefixed “id” need removed using functions {appler}. example ID GitHub 1477376905 (https://apps.apple.com/us/app/github/id1477376905).","code":""},{"path":"https://ashbaldry.github.io/appler/articles/introduction.html","id":"apple-store-lookup","dir":"Articles","previous_headings":"Apple Store Search","what":"Apple Store Lookup","title":"Introduction to {appler}","text":"already ID, can use lookup_apple return information search_apple specific entity chosen. Comparing results search lookup:","code":"taylor_swift_lookup <- lookup_apple(taylor_swift_id) str(taylor_swift_lookup) #> 'data.frame':    1 obs. of  8 variables: #>  $ wrapperType     : chr \"artist\" #>  $ artistType      : chr \"Artist\" #>  $ artistName      : chr \"Taylor Swift\" #>  $ artistLinkUrl   : chr \"https://music.apple.com/us/artist/taylor-swift/159260351?uo=4\" #>  $ artistId        : int 159260351 #>  $ amgArtistId     : int 816977 #>  $ primaryGenreName: chr \"Pop\" #>  $ primaryGenreId  : int 14 taylor_swift_cols <- names(taylor_swift) cat(\"Same results:\", all.equal(taylor_swift, taylor_swift_lookup[, taylor_swift_cols]), \"\\n\") #> Same results: TRUE"},{"path":"https://ashbaldry.github.io/appler/articles/introduction.html","id":"reviews","dir":"Articles","previous_headings":"","what":"Reviews","title":"Introduction to {appler}","text":"ID, can get interesting part: reviews. Apple RSS feed enables pull latest 500 reviews application, along information version reviewed, rating given user. limitation can pull reviews single country, default reviews US returned, however ISO-2 country code can used. app isn’t available country, 400 error.","code":"github_reviews <- get_apple_reviews(github_app_id) head(github_reviews) #>           id         review_time             author app_version #> 1 9500797135 2023-01-12 23:18:20      nokiapureview      1.95.0 #> 2 9493878837 2023-01-11 00:34:31       superToasted      1.95.0 #> 3 9470048234 2023-01-04 11:47:12 wouda thought that      1.94.0 #> 4 9467982024 2023-01-03 22:00:34     James P 183659      1.94.0 #> 5 9416273138 2022-12-20 12:53:20           razemiah      1.93.0 #> 6 9414966231 2022-12-20 03:35:45            bryceco      1.93.0 #>                                 title rating #> 1              Star button is too big      4 #> 2                       no clone link      1 #> 3                               Gists      2 #> 4 Incredible well designed for mobile      5 #> 5              Improving all the time      5 #> 6                         Bugs galore      2 #>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       review #> 1                                                                                                                                                                                                                                                                                                                                                                                                 Always touch star button when scrolling repo list.Please decrease the size of star button. #> 2                                                                                                                                                                                     The mobile all and mobile website decided to omit the clone link of all repos. I am trying to use the app to install some drivers on a linux machine with no browser to request a desktop version. Because of this i am unable to use github to get the most basic of information i need to use a repo #> 3                                                                                                                                                                                                                                                                                                                                                                                                                                                  No way, that I can find, to access gists. #> 4                                                                                                                                                                                                                                                                                                 Given that it makes so much sense for me to interact with GitHub on my computer the majority of the time, I wasn’t expecting the mobile app to be so nice and easy to use. It’s beautiful. #> 5                                                                                                                                                                                                                                                                                                                                   The app continues to improve and become a better experience. The features that are released actually work. Can’t wait to see the continued improvements! #> 6 I generally use the website instead of this app because the functionality is pretty limited, and too often there’s something I want to do that the app simply does not support or supports poorly because of bugs. \\n\\nFor example if you want to search issues from a particular author it only lets you filter on collaborators. Or if you’re reviewing a commit and select “Jump to file” it opens a page that shows the file name and nothing else. Stupid bugs that are very obvious."},{"path":"https://ashbaldry.github.io/appler/articles/introduction.html","id":"ratings","dir":"Articles","previous_headings":"","what":"Ratings","title":"Introduction to {appler}","text":"One extra piece functionality available {appler} ability scrape rating split App Store. Whilst average rating app available search_apple, useful know many 5* ratings given many 1* ratings given.","code":"github_ratings <- get_apple_rating_split(github_app_id) github_ratings #>   rating percent #> 1      5    0.89 #> 2      4    0.07 #> 3      3    0.02 #> 4      2    0.01 #> 5      1    0.02"},{"path":"https://ashbaldry.github.io/appler/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ashley Baldry. Author, maintainer.","code":""},{"path":"https://ashbaldry.github.io/appler/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Baldry (2023). appler: 'Apple App Store' 'iTunes' Data Extraction. https://ashbaldry.github.io/appler/, https://performance-partners.apple.com/search-api.","code":"@Manual{,   title = {appler: 'Apple App Store' and 'iTunes' Data Extraction},   author = {Ashley Baldry},   year = {2023},   note = {https://ashbaldry.github.io/appler/, https://performance-partners.apple.com/search-api}, }"},{"path":[]},{"path":"https://ashbaldry.github.io/appler/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Apple App Store and iTunes Data Extraction","text":"{appler} package wrapper around Apple’s App Store Search API. allows user pull information artists, applications, anything else available iTunes Apple App Store. functions included allow pulling information included search API application reviews split ratings.","code":""},{"path":"https://ashbaldry.github.io/appler/index.html","id":"apple-store-search","dir":"","previous_headings":"","what":"Apple Store Search","title":"Apple App Store and iTunes Data Extraction","text":"first thing find ID entity analysing. search_apple function use Apple’s API return items related search terms entered. default pulls tracks audiobooks, however entity parameter can specify want search artists applications. Applications slightly different, instead artistId, trackId used store unique ID. searching software, lot information returned, application metadata (size, version, release notes) average rating. Use str(github_app) take look everything included.","code":"# Artist ID can be obtained from the artistId column taylor_swift_songs <- search_apple(\"Taylor Swift\")  taylor_swift <- search_apple(\"Taylor Swift\", media = \"music\", entity = \"musicArtist\") str(taylor_swift)  taylor_swift_id <- taylor_swift$artistId github_tracks <- search_apple(\"GitHub\")  github_app <- search_apple(\"GitHub\", media = \"software\", entity = \"software\") # Over 50 apps are returned, however the top is the official GitHub app github_app_id <- github_app$trackId[1]"},{"path":"https://ashbaldry.github.io/appler/index.html","id":"manual-search","dir":"","previous_headings":"Apple Store Search","what":"Manual Search","title":"Apple App Store and iTunes Data Extraction","text":"Alternatively ID can found URL. artists tracks can found last part URL. example, find Taylor Swift ID 159260351 (https://music.apple.com/us/artist/taylor-swift/159260351), latest album Midnights 1650841512 (https://music.apple.com/us/album/midnights-3am-edition/1650841512). applications almost , however prefixed “id” need removed using functions {appler}. example ID GitHub 1477376905 (https://apps.apple.com/us/app/github/id1477376905).","code":""},{"path":"https://ashbaldry.github.io/appler/index.html","id":"apple-store-lookup","dir":"","previous_headings":"Apple Store Search","what":"Apple Store Lookup","title":"Apple App Store and iTunes Data Extraction","text":"already ID, can use lookup_apple return information search_apple specific entity chosen.","code":"taylor_swift_lookup <- lookup_apple(taylor_swift_id)"},{"path":"https://ashbaldry.github.io/appler/index.html","id":"reviews","dir":"","previous_headings":"","what":"Reviews","title":"Apple App Store and iTunes Data Extraction","text":"ID, can get interesting part: reviews. Apple RSS feed enables pull latest 500 reviews application, along information version reviewed, rating given user. limitation can pull reviews single country, default reviews US returned, however ISO-2 country code can used. app isn’t available country, 400 error.","code":"github_reviews <- get_apple_reviews(github_app_id)"},{"path":"https://ashbaldry.github.io/appler/index.html","id":"ratings","dir":"","previous_headings":"","what":"Ratings","title":"Apple App Store and iTunes Data Extraction","text":"One extra piece functionality available {appler} ability scrape rating split App Store. Whilst average rating app available search_apple, useful know many 5* ratings given many 1* ratings given.","code":"github_ratings <- get_apple_rating_split(github_app_id)"},{"path":"https://ashbaldry.github.io/appler/reference/apple_apps.html","id":null,"dir":"Reference","previous_headings":"","what":"Apple App Store Applications — apple_apps","title":"Apple App Store Applications — apple_apps","text":"dataset containing selection apps available Apple App Store corresponding ID can used appler functions. see information application online, can add following URL browser: apps.apple.com/app/id<id> <id> `app_id` column","code":""},{"path":"https://ashbaldry.github.io/appler/reference/apple_apps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apple App Store Applications — apple_apps","text":"","code":"apple_apps"},{"path":"https://ashbaldry.github.io/appler/reference/apple_apps.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Apple App Store Applications — apple_apps","text":"data frame 2 columns 202 rows app_name Application name app_id Apple ID application","code":""},{"path":"https://ashbaldry.github.io/appler/reference/apple_apps.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Apple App Store Applications — apple_apps","text":"<https://apps.apple.com>","code":""},{"path":"https://ashbaldry.github.io/appler/reference/apple_apps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apple App Store Applications — apple_apps","text":"applications table available Canada (`country_id = \"ca\"`) time writing (2022-12-03), however might available countries, different application name.","code":""},{"path":"https://ashbaldry.github.io/appler/reference/apple_apps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apple App Store Applications — apple_apps","text":"","code":"if (FALSE) { # interactive() # Get information about Microsoft Teams teams <- apple_apps[apple_apps$app_name == \"Microsoft Teams\", \"app_id\"]  # Search for any other apps search_apple(term = \"Microsoft Teams\", country = \"ca\", media = \"software\")  # General application information including average rating lookup_apple(teams, country = \"ca\")  # Latest application reviews get_apple_reviews(teams, country = \"ca\")  # Current position on App store get_apple_chart_postion(teams, country = \"ca\") }"},{"path":"https://ashbaldry.github.io/appler/reference/get_apple_chart_postion.html","id":null,"dir":"Reference","previous_headings":"","what":"Apple App Store Chart Position — get_apple_chart_postion","title":"Apple App Store Chart Position — get_apple_chart_postion","text":"Search whether application currently top 100 apps category Apple App Store.","code":""},{"path":"https://ashbaldry.github.io/appler/reference/get_apple_chart_postion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apple App Store Chart Position — get_apple_chart_postion","text":"","code":"get_apple_chart_postion(id, country)"},{"path":"https://ashbaldry.github.io/appler/reference/get_apple_chart_postion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apple App Store Chart Position — get_apple_chart_postion","text":"id ID App Apple App Store. Either found using search_apple, available URL app pull reviews . example, GitHub's App ID 1477376903, seen URL: https://apps.apple.com/gb/app/id1477376905 country two-letter country code store want search. list country codes see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2","code":""},{"path":"https://ashbaldry.github.io/appler/reference/get_apple_chart_postion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apple App Store Chart Position — get_apple_chart_postion","text":"list two, containing `position` `category` app available. application charts fields return NA","code":""},{"path":"https://ashbaldry.github.io/appler/reference/get_apple_chart_postion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apple App Store Chart Position — get_apple_chart_postion","text":"","code":"if (FALSE) { # interactive() # Search for GitHub in App Store in the UK country_id <- \"gb\" github_search_results <- search_apple(   term = \"GitHub\",   country = country_id,   media = \"software\" )  # Look up chart position for GitHub in the UK # (App ID found in trackId column of github_search_results) get_apple_chart_postion(1477376905, \"gb\") }"},{"path":"https://ashbaldry.github.io/appler/reference/get_apple_rating_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Apple App Store Ratings — get_apple_rating_split","title":"Apple App Store Ratings — get_apple_rating_split","text":"Scrapes App store page retrieves split ratings 1 5 stars","code":""},{"path":"https://ashbaldry.github.io/appler/reference/get_apple_rating_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apple App Store Ratings — get_apple_rating_split","text":"","code":"get_apple_rating_split(id, country = \"us\")"},{"path":"https://ashbaldry.github.io/appler/reference/get_apple_rating_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apple App Store Ratings — get_apple_rating_split","text":"id ID App Apple App Store country two-letter country code store want search. list country codes see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2","code":""},{"path":"https://ashbaldry.github.io/appler/reference/get_apple_rating_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apple App Store Ratings — get_apple_rating_split","text":"5 row data.frame split 1-5 stars given rounded nearest percent","code":""},{"path":"https://ashbaldry.github.io/appler/reference/get_apple_rating_split.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apple App Store Ratings — get_apple_rating_split","text":"overall rating count, use lookup_apple","code":""},{"path":"https://ashbaldry.github.io/appler/reference/get_apple_rating_split.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apple App Store Ratings — get_apple_rating_split","text":"","code":"if (FALSE) { # interactive() # Search for GitHub in App Store in the UK country_id <- \"gb\" github_search_results <- search_apple(   term = \"GitHub\",   country = country_id,   media = \"software\" )  # Look up app store rating split for GitHub in the UK # (App ID found in trackId column of github_search_results) get_apple_rating_split(1477376905, country_id) }"},{"path":"https://ashbaldry.github.io/appler/reference/get_apple_reviews.html","id":null,"dir":"Reference","previous_headings":"","what":"Apple App Store Reviews — get_apple_reviews","title":"Apple App Store Reviews — get_apple_reviews","text":"Using Apple's RSS feed, extract recent helpful reviews specific application.","code":""},{"path":"https://ashbaldry.github.io/appler/reference/get_apple_reviews.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apple App Store Reviews — get_apple_reviews","text":"","code":"get_apple_reviews(   id,   country = \"us\",   all_results = FALSE,   page_no = 1,   sort_by = c(\"mostrecent\", \"mosthelpful\") )"},{"path":"https://ashbaldry.github.io/appler/reference/get_apple_reviews.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apple App Store Reviews — get_apple_reviews","text":"id ID App Apple App Store. Either found using search_apple, available URL app pull reviews . example, GitHub's App ID 1477376903, seen URL: https://apps.apple.com/gb/app/id1477376905 country two-letter country code store want search. list country codes see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2 all_results Logical, like possible reviews pulled? default set FALSE page_no page_no = FALSE page reviews pull. Defaults recent. sort_by order reviews pulled? currently two possible options: \"mostrecent\" Sorts time reviews posted pulls recently posted reviews \"mosthelpful\" Sorts reviews usefulness returns useful posts. larger apps, top 500 may match top 500 recent","code":""},{"path":"https://ashbaldry.github.io/appler/reference/get_apple_reviews.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apple App Store Reviews — get_apple_reviews","text":"data.frame extracted reviews, containing: idThe reveiw ID review_timeThe time review posted App Store authorThe username reviewer app_versionThe version application installed reviewing application titleTitle summary review ratingThe rating (5) given application reviewThe text review reviews return NULL.","code":""},{"path":"https://ashbaldry.github.io/appler/reference/get_apple_reviews.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apple App Store Reviews — get_apple_reviews","text":"limitation Apple's RSS feed means 500 recent/helpful reviews can pulled. 10 pages results RSS feed, one containing 50 reviews. recommended periodically store reviews database storage system track older reviews.","code":""},{"path":"https://ashbaldry.github.io/appler/reference/get_apple_reviews.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apple App Store Reviews — get_apple_reviews","text":"","code":"if (FALSE) { # interactive() # Search for GitHub in App Store in the UK country_id <- \"gb\" github_search_results <- search_apple(   term = \"GitHub\",   country = country_id,   media = \"software\" )  # Look up reviews for GitHub # (App ID found in trackId column of github_search_results) get_apple_reviews(1477376905, country_id) }"},{"path":"https://ashbaldry.github.io/appler/reference/itunes_artists.html","id":null,"dir":"Reference","previous_headings":"","what":"iTunes Artists — itunes_artists","title":"iTunes Artists — itunes_artists","text":"small dataset containing current artists available iTunes corresponding ID can used appler functions. see information artist online, can add following URL browser: music.apple.com/artist/<id> <id> `artist_id` column","code":""},{"path":"https://ashbaldry.github.io/appler/reference/itunes_artists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"iTunes Artists — itunes_artists","text":"","code":"itunes_artists"},{"path":"https://ashbaldry.github.io/appler/reference/itunes_artists.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"iTunes Artists — itunes_artists","text":"data frame 2 columns 10 rows artist Artist name artist_id Apple ID artist","code":""},{"path":"https://ashbaldry.github.io/appler/reference/itunes_artists.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"iTunes Artists — itunes_artists","text":"<https://music.apple.com>","code":""},{"path":"https://ashbaldry.github.io/appler/reference/itunes_artists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"iTunes Artists — itunes_artists","text":"","code":"if (FALSE) { # interactive() # Get information about Microsoft Teams lizzo <- itunes_artists[itunes_artists$artist == \"Lizzo\", ] lizzo_id <- lizzo$artist_id lizzo_name <- lizzo$artist  # Search for artist by name, can find the ID from this query search_apple(term = lizzo_name, country = \"ca\", lang = \"en\")  # Get information about the artist lookup_apple(id = lizzo_id, country = \"ca\", sort = \"recent\") }"},{"path":"https://ashbaldry.github.io/appler/reference/lookup_apple.html","id":null,"dir":"Reference","previous_headings":"","what":"Apple Store Lookup — lookup_apple","title":"Apple Store Lookup — lookup_apple","text":"can create lookup request search content stores based iTunes IDs, UPCs/EANs, Music Guide (AMG) IDs. ID-based lookups faster contain fewer false-positive results.","code":""},{"path":"https://ashbaldry.github.io/appler/reference/lookup_apple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apple Store Lookup — lookup_apple","text":"","code":"lookup_apple(   id,   country = NULL,   entity = NULL,   limit = NULL,   sort = NULL,   id_type = \"id\" )"},{"path":"https://ashbaldry.github.io/appler/reference/lookup_apple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apple Store Lookup — lookup_apple","text":"id ID iTunes entity country two-letter country code store want search. list country codes see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2 entity Optional type results want returned, relative specified media type. limit Optional number search results want iTunes Store return 1 200. default 50. sort Optional order results returned, recent first select recent. id_type ID type lookup, options : id default iTunes ID amgArtistId AMG Artist ID amgAlbumId AMG Album ID upc UPC Album Video ID isbn ISB Book ID","code":""},{"path":"https://ashbaldry.github.io/appler/reference/lookup_apple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apple Store Lookup — lookup_apple","text":"data.frame results match iTunes database. successful results return NULL.","code":""},{"path":[]},{"path":"https://ashbaldry.github.io/appler/reference/lookup_apple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apple Store Lookup — lookup_apple","text":"","code":"if (FALSE) { # interactive() # Search for all Jack Johnson audio and video content search_apple(term = \"Jack Johnson\")  # Look up Jack Johnson by iTunes artist ID lookup_apple(909253)  # Look up Jack Johnson by AMG artist ID lookup_apple(468749, id_type = \"amgArtistId\") }"},{"path":"https://ashbaldry.github.io/appler/reference/search_apple.html","id":null,"dir":"Reference","previous_headings":"","what":"Apple Store Search — search_apple","title":"Apple Store Search — search_apple","text":"Using Apple's iTunes API, find content available Apple based given search term.","code":""},{"path":"https://ashbaldry.github.io/appler/reference/search_apple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apple Store Search — search_apple","text":"","code":"search_apple(   term,   country = NULL,   media = NULL,   entity = NULL,   attribute = NULL,   limit = NULL,   lang = c(\"en_us\", \"ja_jp\"),   explicit = c(\"Yes\", \"No\") )"},{"path":"https://ashbaldry.github.io/appler/reference/search_apple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apple Store Search — search_apple","text":"term URL-encoded text string want search . example: jack+johnson. using vector search terms one search. country two-letter country code store want search. list country codes see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2 media Optional media type want search . example: movie. default . entity Optional type results want returned, relative specified media type. attribute Optional    attribute want search stores, relative specified media type. example, want search artist name specify entity=allArtist&attribute=allArtistTerm. example, search term=maroon, iTunes returns \"Maroon 5\" search results, instead artists ever recorded song word \"maroon\" title. limit Optional number search results want iTunes Store return 1 200. default 50. lang Optional language, English Japanese, want use returning search results. explicit Optional flag indicating whether want include explicit content search results.","code":""},{"path":"https://ashbaldry.github.io/appler/reference/search_apple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apple Store Search — search_apple","text":"data.frame results match iTunes database. successful results return NULL.","code":""},{"path":[]},{"path":"https://ashbaldry.github.io/appler/reference/search_apple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apple Store Search — search_apple","text":"","code":"if (FALSE) { # interactive() # Search for all Jack Johnson audio and video content search_apple(term = \"jack johnson\")  # To search for all Jack Johnson audio and video content and return only the first 25 items search_apple(term = \"jack johnson\", limit = 25) }"},{"path":"https://ashbaldry.github.io/appler/news/index.html","id":"appler-020","dir":"Changelog","previous_headings":"","what":"appler 0.2.0","title":"appler 0.2.0","text":"Removing glue xml2 dependencies Improvements documentation (#6) Updating API documentation URL (#3)","code":""},{"path":"https://ashbaldry.github.io/appler/news/index.html","id":"appler-014","dir":"Changelog","previous_headings":"","what":"appler 0.1.4","title":"appler 0.1.4","text":"CRAN release: 2022-10-06 Updating API documentation URL (#3)","code":""},{"path":"https://ashbaldry.github.io/appler/news/index.html","id":"appler-013","dir":"Changelog","previous_headings":"","what":"appler 0.1.3","title":"appler 0.1.3","text":"CRAN release: 2022-03-28 Updating examples","code":""},{"path":"https://ashbaldry.github.io/appler/news/index.html","id":"appler-012","dir":"Changelog","previous_headings":"","what":"appler 0.1.2","title":"appler 0.1.2","text":"CRAN release: 2021-10-21 Removing lubridate dependency Removing tests can affected app’s store ranking (#2)","code":""},{"path":"https://ashbaldry.github.io/appler/news/index.html","id":"appler-011","dir":"Changelog","previous_headings":"","what":"appler 0.1.1","title":"appler 0.1.1","text":"CRAN release: 2021-05-24 Tests robust check internet connectivity running (#1)","code":""},{"path":"https://ashbaldry.github.io/appler/news/index.html","id":"appler-010","dir":"Changelog","previous_headings":"","what":"appler 0.1.0","title":"appler 0.1.0","text":"CRAN release: 2021-03-05 Initial release appler package.","code":""}]
